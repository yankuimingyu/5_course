###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        14/May/2017  11:28:18
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\bsp\mpgl1-ehdw-03.c
#    Command line =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\bsp\mpgl1-ehdw-03.c
#        -D MPGL1 -D MPG1 -D EIE1 --preprocess=cl
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -lC
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\
#        -o
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\ -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\bsp\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\drivers\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\application\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\application\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\cmsis\
#        -I
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\..\..\firmware_mpg_common\drivers\
#        -On --use_c++_inline --require_prototypes -I "D:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\List\mpgl1-ehdw-03.lst
#    Object file  =  
#        D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\iar_7_20_1\Debug\Obj\mpgl1-ehdw-03.o
#
###############################################################################

D:\Documents\GitHub\5-5eie\5_course\firmware_mpgl1\bsp\mpgl1-ehdw-03.c
      1          /***********************************************************************************************************************
      2          File: mpgl1-ehdw-03.c                                                                
      3          
      4          Description:
      5          This file provides core and GPIO functions for the mpgl1-ehdw-03 board.
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32SystemTime1ms;                       /* Global system time incremented every ms, max 2^32 (~49 days) */
   \                     G_u32SystemTime1ms:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          volatile u32 G_u32SystemTime1s;                        /* Global system time incremented every second, max 2^32 (~136 years) */
   \                     G_u32SystemTime1s:
   \   00000000                      DS8 4
     17          
     18          /*--------------------------------------------------------------------------------------------------------------------*/
     19          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     20          extern volatile u32 G_u32SystemFlags;                  /* From main.c */
     21          extern volatile u32 G_u32ApplicationFlags;             /* From main.c */
     22          
     23          extern u32 G_u32DebugFlags;                            /* From debug.c */
     24          
     25          
     26          /***********************************************************************************************************************
     27          Global variable definitions with scope limited to this local application.
     28          Variable names shall start with "Bsp_" and be declared as static.
     29          ***********************************************************************************************************************/

   \                                 In section .bss, align 4
     30          static u32 Bsp_u32TimingViolationsCounter = 0;
   \                     Bsp_u32TimingViolationsCounter:
   \   00000000                      DS8 4
     31          
     32          
     33          /***********************************************************************************************************************
     34          Function Definitions
     35          ***********************************************************************************************************************/
     36          
     37          /*--------------------------------------------------------------------------------------------------------------------*/
     38          /* Public Functions */
     39          /*--------------------------------------------------------------------------------------------------------------------*/
     40          
     41          
     42          /*--------------------------------------------------------------------------------------------------------------------*/
     43          /* Protected Functions */
     44          /*--------------------------------------------------------------------------------------------------------------------*/
     45          
     46          /*----------------------------------------------------------------------------------------------------------------------
     47          Function: ClockSetup
     48          
     49          Description:
     50          Loads all registers required to set up the processor clocks.
     51          
     52          Requires:
     53            - Built-in 32kHz slow clock is active to time out the fast clock startup time
     54          
     55          Promises:
     56            - EFC is set up with proper flash access wait states based on 48MHz system clock
     57            - PMC is set up with proper oscillators and clock sources
     58          */

   \                                 In section .text, align 2, keep-with-next
     59          void ClockSetup(void)
     60          {
     61            /* Activate the peripheral clocks needed for the system */
     62            AT91C_BASE_PMC->PMC_PCER = PMC_PCER_INIT;
   \                     ClockSetup: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x27fced73
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400e0410
   \   00000008   0x6008             STR      R0,[R1, #+0]
     63          
     64            /* Enable the master clock on the PKC0 clock out pin (PA_27_CLOCK_OUT) */
     65            AT91C_BASE_PMC->PMC_PCKR[0] = AT91C_PMC_CSS_SYS_CLK | AT91C_PMC_PRES_CLK;
   \   0000000A   0x2004             MOVS     R0,#+4
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400e0440
   \   00000010   0x6008             STR      R0,[R1, #+0]
     66            AT91C_BASE_PMC->PMC_SCER = AT91C_PMC_PCK0;
   \   00000012   0xF44F 0x7080      MOV      R0,#+256
   \   00000016   0x....             LDR.N    R1,??DataTable8_3  ;; 0x400e0400
   \   00000018   0x6008             STR      R0,[R1, #+0]
     67          
     68            /* Turn on the main oscillator and wait for it to start up */
     69            AT91C_BASE_PMC->PMC_MOR = PMC_MOR_INIT;
   \   0000001A   0x....             LDR.N    R0,??DataTable8_4  ;; 0x37f019
   \   0000001C   0x....             LDR.N    R1,??DataTable8_5  ;; 0x400e0420
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     70            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MOSCXTS) );
   \                     ??ClockSetup_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable8_6  ;; 0x400e0468
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x07C0             LSLS     R0,R0,#+31
   \   00000026   0xD5FB             BPL.N    ??ClockSetup_0
     71          
     72            /* Assign main clock as crystal */
     73            AT91C_BASE_PMC->PMC_MOR |= (AT91C_CKGR_MOSCSEL | MOR_KEY);
   \   00000028   0x....             LDR.N    R0,??DataTable8_5  ;; 0x400e0420
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x....             LDR.N    R1,??DataTable8_7  ;; 0x1370000
   \   0000002E   0x4308             ORRS     R0,R1,R0
   \   00000030   0x....             LDR.N    R1,??DataTable8_5  ;; 0x400e0420
   \   00000032   0x6008             STR      R0,[R1, #+0]
     74            
     75            /* Initialize PLLA and wait for lock */
     76            AT91C_BASE_PMC->PMC_PLLAR = PMC_PLAAR_INIT;
   \   00000034   0x....             LDR.N    R0,??DataTable8_8  ;; 0x20073f01
   \   00000036   0x....             LDR.N    R1,??DataTable8_9  ;; 0x400e0428
   \   00000038   0x6008             STR      R0,[R1, #+0]
     77            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKA) );
   \                     ??ClockSetup_1: (+1)
   \   0000003A   0x....             LDR.N    R0,??DataTable8_6  ;; 0x400e0468
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x0780             LSLS     R0,R0,#+30
   \   00000040   0xD5FB             BPL.N    ??ClockSetup_1
     78            
     79            /* Set flash wait states to allow 48 MHz system clock (2 wait states required) */
     80            AT91C_BASE_EFC0->EFC_FMR = AT91C_EFC_FWS_2WS;
   \   00000042   0xF44F 0x7000      MOV      R0,#+512
   \   00000046   0x....             LDR.N    R1,??DataTable8_10  ;; 0x400e0800
   \   00000048   0x6008             STR      R0,[R1, #+0]
     81          //  AT91C_BASE_EFC1->EFC_FMR = AT91C_EFC_FWS_2WS;
     82          
     83            /* Assign the PLLA as the main system clock with prescaler active using the sequence suggested on pg. 472 */
     84            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_INIT;
   \   0000004A   0xF242 0x0011      MOVW     R0,#+8209
   \   0000004E   0x....             LDR.N    R1,??DataTable8_11  ;; 0x400e0430
   \   00000050   0x6008             STR      R0,[R1, #+0]
     85            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_2: (+1)
   \   00000052   0x....             LDR.N    R0,??DataTable8_6  ;; 0x400e0468
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x0700             LSLS     R0,R0,#+28
   \   00000058   0xD5FB             BPL.N    ??ClockSetup_2
     86            AT91C_BASE_PMC->PMC_MCKR = PMC_MCKR_PLLA;
   \   0000005A   0xF242 0x0012      MOVW     R0,#+8210
   \   0000005E   0x....             LDR.N    R1,??DataTable8_11  ;; 0x400e0430
   \   00000060   0x6008             STR      R0,[R1, #+0]
     87            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_MCKRDY) );
   \                     ??ClockSetup_3: (+1)
   \   00000062   0x....             LDR.N    R0,??DataTable8_6  ;; 0x400e0468
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x0700             LSLS     R0,R0,#+28
   \   00000068   0xD5FB             BPL.N    ??ClockSetup_3
     88          
     89            /* Initialize UTMI for USB usage */
     90            AT91C_BASE_CKGR->CKGR_UCKR |= (AT91C_CKGR_UPLLCOUNT & (3 << 20)) | AT91C_CKGR_UPLLEN;
   \   0000006A   0x....             LDR.N    R0,??DataTable8_12  ;; 0x400e041c
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF450 0x1044      ORRS     R0,R0,#0x310000
   \   00000072   0x....             LDR.N    R1,??DataTable8_12  ;; 0x400e041c
   \   00000074   0x6008             STR      R0,[R1, #+0]
     91            while ( !(AT91C_BASE_PMC->PMC_SR & AT91C_PMC_LOCKU) );
   \                     ??ClockSetup_4: (+1)
   \   00000076   0x....             LDR.N    R0,??DataTable8_6  ;; 0x400e0468
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x0640             LSLS     R0,R0,#+25
   \   0000007C   0xD5FB             BPL.N    ??ClockSetup_4
     92            
     93          } /* end ClockSetup */
   \   0000007E   0x4770             BX       LR               ;; return
     94          
     95          
     96          /*----------------------------------------------------------------------------------------------------------------------
     97          Function: RealTimeClockSetup
     98          
     99          Description:
    100          Loads all registers required to set up the real time clock.
    101          
    102          Requires:
    103          
    104          Promises:
    105          */

   \                                 In section .text, align 2, keep-with-next
    106          void RealTimeClockSetup(void)
    107          {
    108          } /* end RealTimeClockSetup() */
   \                     RealTimeClockSetup: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    109          
    110          
    111          /*----------------------------------------------------------------------------------------------------------------------
    112          Function: SysTickSetup
    113          
    114          Description:
    115          Initializes the 1ms and 1s System Ticks off the core timer.
    116          
    117          Requires:
    118            - NVIC is setup and SysTick handler is installed
    119          
    120          Promises:
    121            - Both system timers are set and the SysTick core peripheral is configured for 1ms intervals
    122          */

   \                                 In section .text, align 2, keep-with-next
    123          void SysTickSetup(void)
    124          {
    125            G_u32SystemTime1ms = 0;      
   \                     SysTickSetup: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR.N    R1,??DataTable8_13
   \   00000004   0x6008             STR      R0,[R1, #+0]
    126            G_u32SystemTime1s  = 0;   
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x....             LDR.N    R1,??DataTable8_14
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    127            
    128            /* Load the SysTick Counter Value */
    129            AT91C_BASE_NVIC->NVIC_STICKRVR   = (u32)SYSTICK_COUNT - 1; /* Check value */
   \   0000000C   0xF241 0x706F      MOVW     R0,#+5999
   \   00000010   0x....             LDR.N    R1,??DataTable8_15  ;; 0xe000e014
   \   00000012   0x6008             STR      R0,[R1, #+0]
    130            AT91C_BASE_NVIC->NVIC_STICKCVR   = (0x00);                                                              
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR.N    R1,??DataTable8_16  ;; 0xe000e018
   \   00000018   0x6008             STR      R0,[R1, #+0]
    131            AT91C_BASE_NVIC->NVIC_STICKCSR   = SYSTICK_CTRL_INIT;
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0x....             LDR.N    R1,??DataTable8_17  ;; 0xe000e010
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    132           
    133          } /* end SysTickSetup() */
   \   00000020   0x4770             BX       LR               ;; return
    134          
    135          
    136          /*----------------------------------------------------------------------------------------------------------------------
    137          Function: SystemSleep
    138          
    139          Description:
    140          Puts the system into sleep mode.  Deep sleep mode is currently disabled, so
    141          maximum processor power savings are not yet realized.  To enable deep sleep,
    142          there are certain considerations for waking up that must be taken care of.
    143          
    144          Requires:
    145            - SysTick is running with interrupt enabled for wake from Sleep LPM
    146            - RTC 1 second alarm running with interrupt for wake from Stop LPM
    147          
    148          Promises:
    149            - Configures processor for maximum sleep while still allowing any required
    150              interrupt to wake it up.
    151          */

   \                                 In section .text, align 2, keep-with-next
    152          void SystemSleep(void)
    153          {    
   \                     SystemSleep: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    154             static u32 u32PreviousSystemTick = 0;
    155             static u8 au8TickWarningMessage[] = "\n\r*** 1ms timing violation: ";   
    156             
    157            /* Check system timing */
    158            if( (G_u32SystemTime1ms - u32PreviousSystemTick) != 1)
   \   00000002   0x....             LDR.N    R0,??DataTable8_13
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable8_18
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x1A40             SUBS     R0,R0,R1
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD017             BEQ.N    ??SystemSleep_0
    159            {
    160              /* Flag, count and optionally display warning */
    161              Bsp_u32TimingViolationsCounter++;
   \   00000010   0x....             LDR.N    R0,??DataTable8_19
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable8_19
   \   00000018   0x6008             STR      R0,[R1, #+0]
    162              G_u32SystemFlags |= _SYSTEM_TIME_WARNING;
   \   0000001A   0x....             LDR.N    R0,??DataTable8_20
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000022   0x....             LDR.N    R1,??DataTable8_20
   \   00000024   0x6008             STR      R0,[R1, #+0]
    163              if(G_u32DebugFlags & _DEBUG_TIME_WARNING_ENABLE)
   \   00000026   0x....             LDR.N    R0,??DataTable8_21
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x0780             LSLS     R0,R0,#+30
   \   0000002C   0xD508             BPL.N    ??SystemSleep_0
    164              {
    165                DebugPrintf(au8TickWarningMessage);
   \   0000002E   0x....             LDR.N    R0,??DataTable8_22
   \   00000030   0x.... 0x....      BL       DebugPrintf
    166                DebugPrintNumber(Bsp_u32TimingViolationsCounter);
   \   00000034   0x....             LDR.N    R0,??DataTable8_19
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x.... 0x....      BL       DebugPrintNumber
    167                DebugLineFeed();
   \   0000003C   0x.... 0x....      BL       DebugLineFeed
    168              }
    169            }
    170            
    171            u32PreviousSystemTick = G_u32SystemTime1ms;
   \                     ??SystemSleep_0: (+1)
   \   00000040   0x....             LDR.N    R0,??DataTable8_13
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x....             LDR.N    R1,??DataTable8_18
   \   00000046   0x6008             STR      R0,[R1, #+0]
    172             
    173            /* Set the system control register for Sleep (but not Deep Sleep) */
    174             AT91C_BASE_PMC->PMC_FSMR &= ~AT91C_PMC_LPM;
   \   00000048   0x....             LDR.N    R0,??DataTable8_23  ;; 0x400e0470
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF430 0x1080      BICS     R0,R0,#0x100000
   \   00000050   0x....             LDR.N    R1,??DataTable8_23  ;; 0x400e0470
   \   00000052   0x6008             STR      R0,[R1, #+0]
    175             AT91C_BASE_NVIC->NVIC_SCR &= ~AT91C_NVIC_SLEEPDEEP;
   \   00000054   0x....             LDR.N    R0,??DataTable8_24  ;; 0xe000ed10
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF030 0x0004      BICS     R0,R0,#0x4
   \   0000005C   0x....             LDR.N    R1,??DataTable8_24  ;; 0xe000ed10
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    176             
    177             /* Set the sleep flag (cleared only in SysTick ISR */
    178             G_u32SystemFlags |= _SYSTEM_SLEEPING;
   \   00000060   0x....             LDR.N    R0,??DataTable8_20
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   00000068   0x....             LDR.N    R1,??DataTable8_20
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    179          
    180            /* Now enter the selected LPM */
    181             while(G_u32SystemFlags & _SYSTEM_SLEEPING)
   \                     ??SystemSleep_1: (+1)
   \   0000006C   0x....             LDR.N    R0,??DataTable8_20
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x0040             LSLS     R0,R0,#+1
   \   00000072   0xD501             BPL.N    ??SystemSleep_2
    182             {
    183               __WFI();
   \   00000074   0xBF30             WFI      
   \   00000076   0xE7F9             B.N      ??SystemSleep_1
    184             }
    185          
    186            /* Clear the sleep mode status flags */
    187            //AT91C_SC->PCON &= SLEEP_MODE_STATUS_CLEAR;
    188            
    189          } /* end SystemSleep(void) */
   \                     ??SystemSleep_2: (+1)
   \   00000078   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??u32PreviousSystemTick:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     ??au8TickWarningMessage:
   \   00000000   0x0A 0x0D          DC8 "\012\015*** 1ms timing violation: "
   \              0x2A 0x2A    
   \              0x2A 0x20    
   \              0x31 0x6D    
   \              0x73 0x20    
   \              0x74 0x69    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x76    
   \              0x69 0x6F    
   \              0x6C 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x3A 0x20    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    190          
    191          
    192          /*----------------------------------------------------------------------------------------------------------------------
    193          Function: WatchDogSetup
    194          
    195          Description:
    196          Configures the watchdog timer.  The dog runs at 32.768kHz from the slow built-in RC clock source which varies over operating conditions from 30kHz to 60kHz.
    197          Since the main loop time / sleep time should be 1 ms most of the time, choosing a value
    198          of 5 seconds should be plenty to avoid watchdog resets.  
    199          
    200          Note: the processor allows the MR register to be written just once.
    201          
    202          Requires:
    203            - SCLK is active at about 32.768kHz
    204          
    205          Promises:
    206            - Watchdog is set for 5 second timeout but not yet enabled
    207          */

   \                                 In section .text, align 2, keep-with-next
    208          void WatchDogSetup(void)
    209          {
    210            AT91C_BASE_WDTC->WDTC_WDMR = WDT_MR_INIT;
   \                     WatchDogSetup: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable8_25  ;; 0x1fff0500
   \   00000002   0x....             LDR.N    R1,??DataTable8_26  ;; 0x400e1254
   \   00000004   0x6008             STR      R0,[R1, #+0]
    211            WATCHDOG_BONE();
   \   00000006   0x....             LDR.N    R0,??DataTable8_27  ;; 0xa5000001
   \   00000008   0x....             LDR.N    R1,??DataTable8_28  ;; 0x400e1250
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    212           
    213          } /* end WatchDogSetup() */
   \   0000000C   0x4770             BX       LR               ;; return
    214          
    215          
    216          /*----------------------------------------------------------------------------------------------------------------------
    217          Function: GpioSetup
    218          
    219          Description
    220          Loads all registers required to set up GPIO on the processor.
    221          
    222          Requires:
    223            - All configurations must match connected hardware.
    224          
    225          Promises:
    226            - All I/O lines are set for their required function and start-state
    227          */

   \                                 In section .text, align 2, keep-with-next
    228          void GpioSetup(void)
    229          {
   \                     GpioSetup: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    230            /* Set all of the pin function registers in port A */
    231            AT91C_BASE_PIOA->PIO_PER    = PIOA_PER_INIT;
   \   00000002   0x....             LDR.N    R0,??DataTable8_29  ;; 0x84030007
   \   00000004   0x....             LDR.N    R1,??DataTable8_30  ;; 0x400e0c00
   \   00000006   0x6008             STR      R0,[R1, #+0]
    232            AT91C_BASE_PIOA->PIO_PDR    = PIOA_PDR_INIT;
   \   00000008   0x....             LDR.N    R0,??DataTable8_31  ;; 0x7bfcfff8
   \   0000000A   0x....             LDR.N    R1,??DataTable8_32  ;; 0x400e0c04
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    233            AT91C_BASE_PIOA->PIO_OER    = PIOA_OER_INIT;
   \   0000000E   0x....             LDR.N    R0,??DataTable8_33  ;; 0xbf55d7f9
   \   00000010   0x....             LDR.N    R1,??DataTable8_34  ;; 0x400e0c10
   \   00000012   0x6008             STR      R0,[R1, #+0]
    234            AT91C_BASE_PIOA->PIO_ODR    = PIOA_ODR_INIT;
   \   00000014   0x....             LDR.N    R0,??DataTable8_35  ;; 0x40aa2806
   \   00000016   0x....             LDR.N    R1,??DataTable8_36  ;; 0x400e0c14
   \   00000018   0x6008             STR      R0,[R1, #+0]
    235            AT91C_BASE_PIOA->PIO_IFER   = PIOA_IFER_INIT;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x....             LDR.N    R1,??DataTable8_37  ;; 0x400e0c20
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    236            AT91C_BASE_PIOA->PIO_IFDR   = PIOA_IFDR_INIT;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x....             LDR.N    R1,??DataTable8_38  ;; 0x400e0c24
   \   00000024   0x6008             STR      R0,[R1, #+0]
    237            AT91C_BASE_PIOA->PIO_SODR   = PIOA_SODR_INIT;
   \   00000026   0x....             LDR.N    R0,??DataTable8_39  ;; 0x88010000
   \   00000028   0x....             LDR.N    R1,??DataTable8_40  ;; 0x400e0c30
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    238            AT91C_BASE_PIOA->PIO_CODR   = PIOA_CODR_INIT;
   \   0000002C   0xF05F 0x5040      MOVS     R0,#+805306368
   \   00000030   0x....             LDR.N    R1,??DataTable8_41  ;; 0x400e0c34
   \   00000032   0x6008             STR      R0,[R1, #+0]
    239            AT91C_BASE_PIOA->PIO_MDER   = PIOA_MDER_INIT;
   \   00000034   0x....             LDR.N    R0,??DataTable8_42  ;; 0x4000600
   \   00000036   0x....             LDR.N    R1,??DataTable8_43  ;; 0x400e0c50
   \   00000038   0x6008             STR      R0,[R1, #+0]
    240            AT91C_BASE_PIOA->PIO_MDDR   = PIOA_MDDR_INIT;
   \   0000003A   0x....             LDR.N    R0,??DataTable8_44  ;; 0xfbfff9ff
   \   0000003C   0x....             LDR.N    R1,??DataTable8_45  ;; 0x400e0c54
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    241            AT91C_BASE_PIOA->PIO_PPUDR  = PIOA_PPUDR_INIT;
   \   00000040   0xF07F 0x0001      MVNS     R0,#+1
   \   00000044   0x....             LDR.N    R1,??DataTable8_46  ;; 0x400e0c60
   \   00000046   0x6008             STR      R0,[R1, #+0]
    242            AT91C_BASE_PIOA->PIO_PPUER  = PIOA_PPUER_INIT;
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x....             LDR.N    R1,??DataTable8_47  ;; 0x400e0c64
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    243            AT91C_BASE_PIOA->PIO_ABSR   = PIOA_ABSR_INIT;
   \   0000004E   0xF05F 0x40F6      MOVS     R0,#+2063597568
   \   00000052   0x....             LDR.N    R1,??DataTable8_48  ;; 0x400e0c70
   \   00000054   0x6008             STR      R0,[R1, #+0]
    244            AT91C_BASE_PIOA->PIO_SCIFSR = PIOA_SCIFSR_INIT;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x....             LDR.N    R1,??DataTable8_49  ;; 0x400e0c80
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    245            AT91C_BASE_PIOA->PIO_DIFSR  = PIOA_DIFSR_INIT;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x....             LDR.N    R1,??DataTable8_50  ;; 0x400e0c84
   \   00000060   0x6008             STR      R0,[R1, #+0]
    246            AT91C_BASE_PIOA->PIO_SCDR   = PIOA_SCDR_INIT;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x....             LDR.N    R1,??DataTable8_51  ;; 0x400e0c8c
   \   00000066   0x6008             STR      R0,[R1, #+0]
    247            AT91C_BASE_PIOA->PIO_OWER   = PIOA_OWER_INIT;
   \   00000068   0x....             LDR.N    R0,??DataTable8_52  ;; 0xb4010000
   \   0000006A   0x....             LDR.N    R1,??DataTable8_53  ;; 0x400e0ca0
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    248            AT91C_BASE_PIOA->PIO_OWDR   = PIOA_OWDR_INIT;
   \   0000006E   0x2000             MOVS     R0,#+0
   \   00000070   0x....             LDR.N    R1,??DataTable8_54  ;; 0x400e0ca4
   \   00000072   0x6008             STR      R0,[R1, #+0]
    249            
    250            /* Configure port B GPIO */
    251            AT91C_BASE_PIOB->PIO_PER    = PIOB_PER_INIT;
   \   00000074   0x....             LDR.N    R0,??DataTable8_55  ;; 0x1bfff57
   \   00000076   0x....             LDR.N    R1,??DataTable8_56  ;; 0x400e0e00
   \   00000078   0x6008             STR      R0,[R1, #+0]
    252            AT91C_BASE_PIOB->PIO_PDR    = PIOB_PDR_INIT;
   \   0000007A   0x....             LDR.N    R0,??DataTable8_57  ;; 0x400058
   \   0000007C   0x....             LDR.N    R1,??DataTable8_58  ;; 0x400e0e04
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    253            AT91C_BASE_PIOB->PIO_OER    = PIOB_OER_INIT;
   \   00000080   0x....             LDR.N    R0,??DataTable8_59  ;; 0x1bfffe0
   \   00000082   0x....             LDR.N    R1,??DataTable8_60  ;; 0x400e0e10
   \   00000084   0x6008             STR      R0,[R1, #+0]
    254            AT91C_BASE_PIOB->PIO_ODR    = PIOB_ODR_INIT;
   \   00000086   0x....             LDR.N    R0,??DataTable8_61  ;; 0x40001f
   \   00000088   0x....             LDR.N    R1,??DataTable8_62  ;; 0x400e0e14
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    255            AT91C_BASE_PIOB->PIO_IFER   = PIOB_IFER_INIT;
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR.N    R1,??DataTable8_63  ;; 0x400e0e20
   \   00000090   0x6008             STR      R0,[R1, #+0]
    256            AT91C_BASE_PIOB->PIO_IFDR   = PIOB_IFDR_INIT;
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x....             LDR.N    R1,??DataTable8_64  ;; 0x400e0e24
   \   00000096   0x6008             STR      R0,[R1, #+0]
    257            AT91C_BASE_PIOB->PIO_SODR   = PIOB_SODR_INIT;
   \   00000098   0x....             LDR.N    R0,??DataTable8_65  ;; 0x1bffe00
   \   0000009A   0x....             LDR.N    R1,??DataTable8_66  ;; 0x400e0e30
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    258            AT91C_BASE_PIOB->PIO_CODR   = PIOB_CODR_INIT;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x....             LDR.N    R1,??DataTable8_67  ;; 0x400e0e34
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    259            AT91C_BASE_PIOB->PIO_MDER   = PIOB_MDER_INIT;
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x....             LDR.N    R1,??DataTable8_68  ;; 0x400e0e50
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    260            AT91C_BASE_PIOB->PIO_MDDR   = PIOB_MDDR_INIT;
   \   000000AA   0xF07F 0x407E      MVNS     R0,#-33554432
   \   000000AE   0x....             LDR.N    R1,??DataTable8_69  ;; 0x400e0e54
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    261            AT91C_BASE_PIOB->PIO_PPUDR  = PIOB_PPUDR_INIT;
   \   000000B2   0x....             LDR.N    R0,??DataTable8_70  ;; 0x1fffe5f
   \   000000B4   0x....             LDR.N    R1,??DataTable8_71  ;; 0x400e0e60
   \   000000B6   0x6008             STR      R0,[R1, #+0]
    262            AT91C_BASE_PIOB->PIO_PPUER  = PIOB_PPUER_INIT;
   \   000000B8   0xF44F 0x70E0      MOV      R0,#+448
   \   000000BC   0x....             LDR.N    R1,??DataTable8_72  ;; 0x400e0e64
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    263            AT91C_BASE_PIOB->PIO_ABSR   = PIOB_ABSR_INIT;
   \   000000C0   0x....             LDR.N    R0,??DataTable8_73  ;; 0x400018
   \   000000C2   0x....             LDR.N    R1,??DataTable8_74  ;; 0x400e0e70
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    264            AT91C_BASE_PIOB->PIO_SCIFSR = PIOB_SCIFSR_INIT;
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x....             LDR.N    R1,??DataTable8_75  ;; 0x400e0e80
   \   000000CA   0x6008             STR      R0,[R1, #+0]
    265            AT91C_BASE_PIOB->PIO_DIFSR  = PIOB_DIFSR_INIT;
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x....             LDR.N    R1,??DataTable8_76  ;; 0x400e0e84
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    266            AT91C_BASE_PIOB->PIO_SCDR   = PIOB_SCDR_INIT;
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x....             LDR.N    R1,??DataTable8_77  ;; 0x400e0e8c
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    267            AT91C_BASE_PIOB->PIO_OWER   = PIOB_OWER_INIT;
   \   000000D8   0x....             LDR.N    R0,??DataTable8_78  ;; 0x1fffe0
   \   000000DA   0x....             LDR.N    R1,??DataTable8_79  ;; 0x400e0ea0
   \   000000DC   0x6008             STR      R0,[R1, #+0]
    268            AT91C_BASE_PIOB->PIO_OWDR   = PIOB_OWDR_INIT;
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x....             LDR.N    R1,??DataTable8_80  ;; 0x400e0ea4
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    269            
    270            PWMSetupAudio();
   \   000000E4   0x.... 0x....      BL       PWMSetupAudio
    271            
    272          } /* end GpioSetup() */
   \   000000E8   0xBD01             POP      {R0,PC}          ;; return
    273          
    274          
    275          /*----------------------------------------------------------------------------
    276          Function: PWMSetupAudio
    277          
    278          Description:
    279          Configures the PWM peripheral for audio operation on H0 and H1 channels.
    280          
    281          Requires:
    282            - Peripheral resources not used for any other function.
    283          
    284          Promises:
    285            - PWM is configured for PWM mode and currently off.
    286          */

   \                                 In section .text, align 2, keep-with-next
    287          void PWMSetupAudio(void)
    288          {
    289            /* Set all intialization values */
    290            AT91C_BASE_PWMC->PWMC_CLK = PWM_CLK_INIT;
   \                     PWMSetupAudio: (+1)
   \   00000000   0xF05F 0x1001      MOVS     R0,#+65537
   \   00000004   0x....             LDR.N    R1,??DataTable8_81  ;; 0x4008c000
   \   00000006   0x6008             STR      R0,[R1, #+0]
    291            AT91C_BASE_PWMC->PWMC_SCM = PWM_SCM_INIT;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR.N    R1,??DataTable8_82  ;; 0x4008c020
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    292            
    293            AT91C_BASE_PWMC_CH0->PWMC_CMR = PWM_CMR0_INIT;
   \   0000000E   0x2003             MOVS     R0,#+3
   \   00000010   0x....             LDR.N    R1,??DataTable8_83  ;; 0x4008c200
   \   00000012   0x6008             STR      R0,[R1, #+0]
    294            AT91C_BASE_PWMC_CH0->PWMC_CPRDR    = PWM_CPRD0_INIT; /* Set current frequency */
   \   00000014   0xF241 0x7070      MOVW     R0,#+6000
   \   00000018   0x....             LDR.N    R1,??DataTable8_84  ;; 0x4008c20c
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    295            AT91C_BASE_PWMC_CH0->PWMC_CPRDUPDR = PWM_CPRD0_INIT; /* Latch CPRD values */
   \   0000001C   0xF241 0x7070      MOVW     R0,#+6000
   \   00000020   0x....             LDR.N    R1,??DataTable8_85  ;; 0x4008c210
   \   00000022   0x6008             STR      R0,[R1, #+0]
    296            AT91C_BASE_PWMC_CH0->PWMC_CDTYR    = PWM_CDTY0_INIT; /* Set 50% duty */
   \   00000024   0xF642 0x60E0      MOVW     R0,#+12000
   \   00000028   0x....             LDR.N    R1,??DataTable8_86  ;; 0x4008c204
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    297            AT91C_BASE_PWMC_CH0->PWMC_CDTYUPDR = PWM_CDTY0_INIT; /* Latch CDTY values */
   \   0000002C   0xF642 0x60E0      MOVW     R0,#+12000
   \   00000030   0x....             LDR.N    R1,??DataTable8_87  ;; 0x4008c208
   \   00000032   0x6008             STR      R0,[R1, #+0]
    298          
    299            AT91C_BASE_PWMC_CH1->PWMC_CMR = PWM_CMR1_INIT;
   \   00000034   0x2003             MOVS     R0,#+3
   \   00000036   0x....             LDR.N    R1,??DataTable8_88  ;; 0x4008c220
   \   00000038   0x6008             STR      R0,[R1, #+0]
    300            AT91C_BASE_PWMC_CH1->PWMC_CPRDR    = PWM_CPRD1_INIT; /* Set current frequency  */
   \   0000003A   0xF240 0x50DC      MOVW     R0,#+1500
   \   0000003E   0x....             LDR.N    R1,??DataTable8_89  ;; 0x4008c22c
   \   00000040   0x6008             STR      R0,[R1, #+0]
    301            AT91C_BASE_PWMC_CH1->PWMC_CPRDUPDR = PWM_CPRD1_INIT; /* Latch CPRD values */
   \   00000042   0xF240 0x50DC      MOVW     R0,#+1500
   \   00000046   0x....             LDR.N    R1,??DataTable8_90  ;; 0x4008c230
   \   00000048   0x6008             STR      R0,[R1, #+0]
    302            AT91C_BASE_PWMC_CH1->PWMC_CDTYR    = PWM_CDTY1_INIT; /* Set 50% duty */
   \   0000004A   0xF640 0x30B8      MOVW     R0,#+3000
   \   0000004E   0x....             LDR.N    R1,??DataTable8_91  ;; 0x4008c224
   \   00000050   0x6008             STR      R0,[R1, #+0]
    303            AT91C_BASE_PWMC_CH1->PWMC_CDTYUPDR = PWM_CDTY1_INIT; /* Latch CDTY values */
   \   00000052   0xF640 0x30B8      MOVW     R0,#+3000
   \   00000056   0x....             LDR.N    R1,??DataTable8_92  ;; 0x4008c228
   \   00000058   0x6008             STR      R0,[R1, #+0]
    304          
    305            
    306          } /* end PWMSetupAudio() */
   \   0000005A   0x4770             BX       LR               ;; return
    307          
    308          
    309          /*----------------------------------------------------------------------------
    310          Function: PWMAudioSetFrequency
    311          
    312          Description:
    313          Configures the PWM peripheral with the desired frequency.
    314          
    315          Requires:
    316            - u32Channel_ is the channel of interest - either BUZZER1 or BUZZER2
    317            - u16Frequency_ is in Hertz and should be in the range 100 - 20,000 since
    318              that is the audible range.  Higher and lower frequencies are allowed, though.
    319            - The PWM peripheral is correctly configured for the current processor clock speed.
    320            - CPRE_CLCK is the clock frequency for the PWM peripheral
    321          
    322          Promises:
    323            - The frequency and duty cycle values for the requested channel are calculated
    324              and then latched to their respective update registers (CPRDUPDR, CDTYUPDR)
    325            - If the channel is not valid, nothing happens
    326          */

   \                                 In section .text, align 2, keep-with-next
    327          void PWMAudioSetFrequency(u32 u32Channel_, u16 u16Frequency_)
    328          {
   \                     PWMAudioSetFrequency: (+1)
   \   00000000   0xB410             PUSH     {R4}
    329            u32 u32ChannelPeriod;
    330            
    331            u32ChannelPeriod = CPRE_CLCK / u16Frequency_;
   \   00000002   0x....             LDR.N    R3,??DataTable8_93  ;; 0x5b8d80
   \   00000004   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   0xFBB3 0xF3F1      UDIV     R3,R3,R1
   \   0000000A   0x001A             MOVS     R2,R3
    332            
    333            if(u32Channel_ == BUZZER1)
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD10F             BNE.N    ??PWMAudioSetFrequency_0
    334            {
    335              /* Set different registers depending on if PWM is already running */
    336              if (AT91C_BASE_PWMC->PWMC_SR & AT91C_PWMC_CHID0)
   \   00000010   0x....             LDR.N    R3,??DataTable8_94  ;; 0x4008c00c
   \   00000012   0x681B             LDR      R3,[R3, #+0]
   \   00000014   0x07DB             LSLS     R3,R3,#+31
   \   00000016   0xD505             BPL.N    ??PWMAudioSetFrequency_1
    337              {
    338                /* Beeper is already running, so use update registers */
    339                AT91C_BASE_PWMC_CH0->PWMC_CPRDUPDR = u32ChannelPeriod;   
   \   00000018   0x....             LDR.N    R3,??DataTable8_85  ;; 0x4008c210
   \   0000001A   0x601A             STR      R2,[R3, #+0]
    340                AT91C_BASE_PWMC_CH0->PWMC_CDTYUPDR = u32ChannelPeriod >> 1; 
   \   0000001C   0x0853             LSRS     R3,R2,#+1
   \   0000001E   0x....             LDR.N    R4,??DataTable8_87  ;; 0x4008c208
   \   00000020   0x6023             STR      R3,[R4, #+0]
   \   00000022   0xE016             B.N      ??PWMAudioSetFrequency_2
    341              }
    342              else
    343              {
    344                /* Beeper is off, so use direct registers */
    345                AT91C_BASE_PWMC_CH0->PWMC_CPRDR = u32ChannelPeriod;
   \                     ??PWMAudioSetFrequency_1: (+1)
   \   00000024   0x....             LDR.N    R3,??DataTable8_84  ;; 0x4008c20c
   \   00000026   0x601A             STR      R2,[R3, #+0]
    346                AT91C_BASE_PWMC_CH0->PWMC_CDTYR = u32ChannelPeriod >> 1;
   \   00000028   0x0853             LSRS     R3,R2,#+1
   \   0000002A   0x....             LDR.N    R4,??DataTable8_86  ;; 0x4008c204
   \   0000002C   0x6023             STR      R3,[R4, #+0]
   \   0000002E   0xE010             B.N      ??PWMAudioSetFrequency_2
    347              }
    348            }
    349            
    350            else if(u32Channel_ == BUZZER2)
   \                     ??PWMAudioSetFrequency_0: (+1)
   \   00000030   0x2802             CMP      R0,#+2
   \   00000032   0xD10E             BNE.N    ??PWMAudioSetFrequency_2
    351            {
    352              /* Set different registers depending on if PWM is already running */
    353              if (AT91C_BASE_PWMC->PWMC_SR & AT91C_PWMC_CHID1)
   \   00000034   0x....             LDR.N    R3,??DataTable8_94  ;; 0x4008c00c
   \   00000036   0x681B             LDR      R3,[R3, #+0]
   \   00000038   0x079B             LSLS     R3,R3,#+30
   \   0000003A   0xD505             BPL.N    ??PWMAudioSetFrequency_3
    354              {
    355                /* Beeper is already running, so use update registers */
    356                AT91C_BASE_PWMC_CH1->PWMC_CPRDUPDR = u32ChannelPeriod;   
   \   0000003C   0x....             LDR.N    R3,??DataTable8_90  ;; 0x4008c230
   \   0000003E   0x601A             STR      R2,[R3, #+0]
    357                AT91C_BASE_PWMC_CH1->PWMC_CDTYUPDR = u32ChannelPeriod >> 1; 
   \   00000040   0x0853             LSRS     R3,R2,#+1
   \   00000042   0x....             LDR.N    R4,??DataTable8_92  ;; 0x4008c228
   \   00000044   0x6023             STR      R3,[R4, #+0]
   \   00000046   0xE004             B.N      ??PWMAudioSetFrequency_2
    358              }
    359              else
    360              {
    361                /* Beeper is off, so use direct registers */
    362                AT91C_BASE_PWMC_CH1->PWMC_CPRDR = u32ChannelPeriod;
   \                     ??PWMAudioSetFrequency_3: (+1)
   \   00000048   0x....             LDR.N    R3,??DataTable8_89  ;; 0x4008c22c
   \   0000004A   0x601A             STR      R2,[R3, #+0]
    363                AT91C_BASE_PWMC_CH1->PWMC_CDTYR = u32ChannelPeriod >> 1;
   \   0000004C   0x0853             LSRS     R3,R2,#+1
   \   0000004E   0x....             LDR.N    R4,??DataTable8_91  ;; 0x4008c224
   \   00000050   0x6023             STR      R3,[R4, #+0]
    364              }
    365            }
    366            
    367          } /* end PWMAudioSetFrequency() */
   \                     ??PWMAudioSetFrequency_2: (+1)
   \   00000052   0xBC10             POP      {R4}
   \   00000054   0x4770             BX       LR               ;; return
    368          
    369          
    370          /*----------------------------------------------------------------------------
    371          Function: PWMAudioOn
    372          
    373          Description:
    374          Enables a PWM channel.
    375          
    376          Requires:
    377            - All peripheral values should be configured
    378            - u32Channel_ is BUZZER1 or BUZZER2
    379          
    380          Promises:
    381            - PWM for the selected channel is enabled
    382          */

   \                                 In section .text, align 2, keep-with-next
    383          void PWMAudioOn(u32 u32Channel_)
    384          {
    385            /* Enable the channel */
    386            AT91C_BASE_PWMC->PWMC_ENA = u32Channel_;  
   \                     PWMAudioOn: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable8_95  ;; 0x4008c004
   \   00000002   0x6008             STR      R0,[R1, #+0]
    387          
    388          } /* end PWMAudioOn() */
   \   00000004   0x4770             BX       LR               ;; return
    389          
    390          
    391          /*----------------------------------------------------------------------------
    392          Function: PWMAudioOff
    393          
    394          Description:
    395          Disables a PWM channel.
    396          
    397          Requires:
    398            - u32Channel_ is BUZZER1 or BUZZER2
    399          
    400          Promises:
    401            - PWM for the selected channel is disabled
    402          */

   \                                 In section .text, align 2, keep-with-next
    403          void PWMAudioOff(u32 u32Channel_)
    404          {
    405            /* Enable the channel */
    406            AT91C_BASE_PWMC->PWMC_DIS = u32Channel_;  
   \                     PWMAudioOff: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable8_96  ;; 0x4008c008
   \   00000002   0x6008             STR      R0,[R1, #+0]
    407          
    408          } /* end PWMAudioOff() */
   \   00000004   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x27FCED73         DC32     0x27fced73

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x400E0410         DC32     0x400e0410

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x400E0440         DC32     0x400e0440

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x400E0400         DC32     0x400e0400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x0037F019         DC32     0x37f019

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x400E0420         DC32     0x400e0420

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x400E0468         DC32     0x400e0468

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x01370000         DC32     0x1370000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x20073F01         DC32     0x20073f01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x400E0428         DC32     0x400e0428

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x400E0800         DC32     0x400e0800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x400E0430         DC32     0x400e0430

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x400E041C         DC32     0x400e041c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     G_u32SystemTime1ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     G_u32SystemTime1s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0xE000E014         DC32     0xe000e014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0xE000E018         DC32     0xe000e018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0xE000E010         DC32     0xe000e010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     ??u32PreviousSystemTick

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     Bsp_u32TimingViolationsCounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     G_u32SystemFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x........         DC32     G_u32DebugFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x........         DC32     ??au8TickWarningMessage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x400E0470         DC32     0x400e0470

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0xE000ED10         DC32     0xe000ed10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x1FFF0500         DC32     0x1fff0500

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x400E1254         DC32     0x400e1254

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0xA5000001         DC32     0xa5000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x400E1250         DC32     0x400e1250

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x84030007         DC32     0x84030007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x400E0C00         DC32     0x400e0c00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x7BFCFFF8         DC32     0x7bfcfff8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x400E0C04         DC32     0x400e0c04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0xBF55D7F9         DC32     0xbf55d7f9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x400E0C10         DC32     0x400e0c10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x40AA2806         DC32     0x40aa2806

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \   00000000   0x400E0C14         DC32     0x400e0c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \   00000000   0x400E0C20         DC32     0x400e0c20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \   00000000   0x400E0C24         DC32     0x400e0c24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \   00000000   0x88010000         DC32     0x88010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \   00000000   0x400E0C30         DC32     0x400e0c30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_41:
   \   00000000   0x400E0C34         DC32     0x400e0c34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_42:
   \   00000000   0x04000600         DC32     0x4000600

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_43:
   \   00000000   0x400E0C50         DC32     0x400e0c50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_44:
   \   00000000   0xFBFFF9FF         DC32     0xfbfff9ff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_45:
   \   00000000   0x400E0C54         DC32     0x400e0c54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_46:
   \   00000000   0x400E0C60         DC32     0x400e0c60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_47:
   \   00000000   0x400E0C64         DC32     0x400e0c64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_48:
   \   00000000   0x400E0C70         DC32     0x400e0c70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_49:
   \   00000000   0x400E0C80         DC32     0x400e0c80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_50:
   \   00000000   0x400E0C84         DC32     0x400e0c84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_51:
   \   00000000   0x400E0C8C         DC32     0x400e0c8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_52:
   \   00000000   0xB4010000         DC32     0xb4010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_53:
   \   00000000   0x400E0CA0         DC32     0x400e0ca0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_54:
   \   00000000   0x400E0CA4         DC32     0x400e0ca4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_55:
   \   00000000   0x01BFFF57         DC32     0x1bfff57

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_56:
   \   00000000   0x400E0E00         DC32     0x400e0e00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_57:
   \   00000000   0x00400058         DC32     0x400058

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_58:
   \   00000000   0x400E0E04         DC32     0x400e0e04

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_59:
   \   00000000   0x01BFFFE0         DC32     0x1bfffe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_60:
   \   00000000   0x400E0E10         DC32     0x400e0e10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_61:
   \   00000000   0x0040001F         DC32     0x40001f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_62:
   \   00000000   0x400E0E14         DC32     0x400e0e14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_63:
   \   00000000   0x400E0E20         DC32     0x400e0e20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_64:
   \   00000000   0x400E0E24         DC32     0x400e0e24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_65:
   \   00000000   0x01BFFE00         DC32     0x1bffe00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_66:
   \   00000000   0x400E0E30         DC32     0x400e0e30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_67:
   \   00000000   0x400E0E34         DC32     0x400e0e34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_68:
   \   00000000   0x400E0E50         DC32     0x400e0e50

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_69:
   \   00000000   0x400E0E54         DC32     0x400e0e54

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_70:
   \   00000000   0x01FFFE5F         DC32     0x1fffe5f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_71:
   \   00000000   0x400E0E60         DC32     0x400e0e60

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_72:
   \   00000000   0x400E0E64         DC32     0x400e0e64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_73:
   \   00000000   0x00400018         DC32     0x400018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_74:
   \   00000000   0x400E0E70         DC32     0x400e0e70

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_75:
   \   00000000   0x400E0E80         DC32     0x400e0e80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_76:
   \   00000000   0x400E0E84         DC32     0x400e0e84

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_77:
   \   00000000   0x400E0E8C         DC32     0x400e0e8c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_78:
   \   00000000   0x001FFFE0         DC32     0x1fffe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_79:
   \   00000000   0x400E0EA0         DC32     0x400e0ea0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_80:
   \   00000000   0x400E0EA4         DC32     0x400e0ea4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_81:
   \   00000000   0x4008C000         DC32     0x4008c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_82:
   \   00000000   0x4008C020         DC32     0x4008c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_83:
   \   00000000   0x4008C200         DC32     0x4008c200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_84:
   \   00000000   0x4008C20C         DC32     0x4008c20c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_85:
   \   00000000   0x4008C210         DC32     0x4008c210

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_86:
   \   00000000   0x4008C204         DC32     0x4008c204

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_87:
   \   00000000   0x4008C208         DC32     0x4008c208

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_88:
   \   00000000   0x4008C220         DC32     0x4008c220

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_89:
   \   00000000   0x4008C22C         DC32     0x4008c22c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_90:
   \   00000000   0x4008C230         DC32     0x4008c230

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_91:
   \   00000000   0x4008C224         DC32     0x4008c224

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_92:
   \   00000000   0x4008C228         DC32     0x4008c228

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_93:
   \   00000000   0x005B8D80         DC32     0x5b8d80

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_94:
   \   00000000   0x4008C00C         DC32     0x4008c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_95:
   \   00000000   0x4008C004         DC32     0x4008c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_96:
   \   00000000   0x4008C008         DC32     0x4008c008
    409          
    410          
    411          /*--------------------------------------------------------------------------------------------------------------------*/
    412          /* End of File */
    413          /*--------------------------------------------------------------------------------------------------------------------*/
    414          
    415          
    416          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ClockSetup
       8   GpioSetup
         8   -> PWMSetupAudio
       0   PWMAudioOff
       0   PWMAudioOn
       4   PWMAudioSetFrequency
       0   PWMSetupAudio
       0   RealTimeClockSetup
       0   SysTickSetup
       8   SystemSleep
         8   -> DebugLineFeed
         8   -> DebugPrintNumber
         8   -> DebugPrintf
       0   WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_41
       4  ??DataTable8_42
       4  ??DataTable8_43
       4  ??DataTable8_44
       4  ??DataTable8_45
       4  ??DataTable8_46
       4  ??DataTable8_47
       4  ??DataTable8_48
       4  ??DataTable8_49
       4  ??DataTable8_5
       4  ??DataTable8_50
       4  ??DataTable8_51
       4  ??DataTable8_52
       4  ??DataTable8_53
       4  ??DataTable8_54
       4  ??DataTable8_55
       4  ??DataTable8_56
       4  ??DataTable8_57
       4  ??DataTable8_58
       4  ??DataTable8_59
       4  ??DataTable8_6
       4  ??DataTable8_60
       4  ??DataTable8_61
       4  ??DataTable8_62
       4  ??DataTable8_63
       4  ??DataTable8_64
       4  ??DataTable8_65
       4  ??DataTable8_66
       4  ??DataTable8_67
       4  ??DataTable8_68
       4  ??DataTable8_69
       4  ??DataTable8_7
       4  ??DataTable8_70
       4  ??DataTable8_71
       4  ??DataTable8_72
       4  ??DataTable8_73
       4  ??DataTable8_74
       4  ??DataTable8_75
       4  ??DataTable8_76
       4  ??DataTable8_77
       4  ??DataTable8_78
       4  ??DataTable8_79
       4  ??DataTable8_8
       4  ??DataTable8_80
       4  ??DataTable8_81
       4  ??DataTable8_82
       4  ??DataTable8_83
       4  ??DataTable8_84
       4  ??DataTable8_85
       4  ??DataTable8_86
       4  ??DataTable8_87
       4  ??DataTable8_88
       4  ??DataTable8_89
       4  ??DataTable8_9
       4  ??DataTable8_90
       4  ??DataTable8_91
       4  ??DataTable8_92
       4  ??DataTable8_93
       4  ??DataTable8_94
       4  ??DataTable8_95
       4  ??DataTable8_96
       4  Bsp_u32TimingViolationsCounter
     128  ClockSetup
       4  G_u32SystemTime1ms
       4  G_u32SystemTime1s
     234  GpioSetup
       6  PWMAudioOff
       6  PWMAudioOn
      86  PWMAudioSetFrequency
      92  PWMSetupAudio
       2  RealTimeClockSetup
      34  SysTickSetup
     122  SystemSleep
      14  WatchDogSetup
      32  au8TickWarningMessage
       4  u32PreviousSystemTick

 
    16 bytes in section .bss
    32 bytes in section .data
 1 112 bytes in section .text
 
 1 112 bytes of CODE memory
    48 bytes of DATA memory

Errors: none
Warnings: none
